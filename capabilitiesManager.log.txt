2025-06-26 16:33:16.007 | RSA private key for plugin signing not found (this is normal for most services)
2025-06-26 16:33:16.020 | Loaded RSA public key for plugin verification
2025-06-26 16:33:18.159 | Attempting to connect to RabbitMQ (attempt 1/20)...
2025-06-26 16:33:18.166 | Using RabbitMQ URL: amqp://stage7:stage7password@rabbitmq:5672
2025-06-26 16:33:18.167 | Attempting to connect to RabbitMQ host: rabbitmq
2025-06-26 16:33:18.168 | Connecting to RabbitMQ at amqp://stage7:stage7password@rabbitmq:5672
2025-06-26 16:33:18.174 | Attempting to register with Consul (attempt 1/10)...
2025-06-26 16:33:18.174 | Using Consul URL: consul:8500
2025-06-26 16:33:18.299 | Successfully initialized repository of type: local
2025-06-26 16:33:18.300 | Successfully initialized repository of type: mongo
2025-06-26 16:33:18.300 | Successfully initialized repository of type: git
2025-06-26 16:33:18.300 | Initializing GitHub repository with provided credentials
2025-06-26 16:33:18.301 | GitHubRepository: Initialized for cpravetz/s7plugins. Plugins dir: 'plugins'. Default branch from config/env: main
2025-06-26 16:33:18.301 | Successfully initialized repository of type: github
2025-06-26 16:33:18.326 | [shouldBypassAuth] Bypassing auth for auth path: /v1/agent/service/register (matched /register)
2025-06-26 16:33:18.594 | [CapabilitiesManager-constructor-aa809a43] CapabilitiesManager.initialize: ConfigManager initialized.
2025-06-26 16:33:18.595 | [CapabilitiesManager-constructor-aa809a43] Setting up express server...
2025-06-26 16:33:18.638 | [CapabilitiesManager-constructor-aa809a43] CapabilitiesManager server listening on port 5060
2025-06-26 16:33:18.648 | [CapabilitiesManager-constructor-aa809a43] CapabilitiesManager server setup complete
2025-06-26 16:33:18.719 | [shouldBypassAuth] Bypassing auth for auth path: /registerComponent (matched /register)
2025-06-26 16:33:18.742 | [shouldBypassAuth] Bypassing auth for auth path: /registerComponent (matched /register)
2025-06-26 16:33:18.757 | Service CapabilitiesManager registered with Consul
2025-06-26 16:33:18.757 | Successfully registered CapabilitiesManager with Consul
2025-06-26 16:33:18.780 | CapabilitiesManager registered successfully with PostOffice
2025-06-26 16:33:18.823 | CapabilitiesManager registered successfully with PostOffice
2025-06-26 16:33:19.048 | Error: GitHub API Error for GET https://api.github.com/repos/cpravetz/s7plugins/contents/plugins. Status: 401. Details: {"message":"Bad credentials","documentation_url":"https://docs.github.com/rest","status":"401"}
2025-06-26 16:33:19.049 |     at GitHubRepository.makeGitHubRequest (/usr/src/app/marketplace/dist/repositories/GitHubRepository.js:152:31)
2025-06-26 16:33:19.049 |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-06-26 16:33:19.049 |     at async GitHubRepository.list (/usr/src/app/marketplace/dist/repositories/GitHubRepository.js:359:30)
2025-06-26 16:33:19.049 |     at async PluginMarketplace.list (/usr/src/app/marketplace/dist/PluginMarketplace.js:108:25)
2025-06-26 16:33:19.049 |     at async PluginRegistry.initialize (/usr/src/app/services/capabilitiesmanager/dist/utils/pluginRegistry.js:115:30)
2025-06-26 16:33:19.050 | GitHubRepository: Error listing plugin ID dirs from plugins: Request failed with status code 401
2025-06-26 16:33:20.233 | [CapabilitiesManager-constructor-aa809a43-2d62d76c] 2025-06-26T20:33:20.228Z - CM - GET /health
2025-06-26 16:33:33.318 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] 2025-06-26T20:33:33.317Z - CM - POST /executeAction
2025-06-26 16:33:33.319 | Created ServiceTokenManager for CapabilitiesManager
2025-06-26 16:33:33.774 | Connected to RabbitMQ
2025-06-26 16:33:33.778 | Channel created successfully
2025-06-26 16:33:33.778 | RabbitMQ channel ready
2025-06-26 16:33:33.839 | Connection test successful - RabbitMQ connection is stable
2025-06-26 16:33:33.839 | Creating queue: capabilitiesmanager-CapabilitiesManager
2025-06-26 16:33:33.855 | Binding queue to exchange: stage7
2025-06-26 16:33:33.875 | Successfully connected to RabbitMQ and set up queues/bindings
2025-06-26 16:33:36.959 | [AuthenticatedAxios] Request 2se59u5uxsj: Failed after 3633ms: {
2025-06-26 16:33:36.959 |   status: undefined,
2025-06-26 16:33:36.959 |   statusText: undefined,
2025-06-26 16:33:36.959 |   data: undefined,
2025-06-26 16:33:36.959 |   url: 'http://marketplace:5050/actionVerbHandler/ACCOMPLISH'
2025-06-26 16:33:36.959 | }
2025-06-26 16:33:44.127 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.getHandlerForActionVerb: Error querying Marketplace for handler: getaddrinfo ENOTFOUND marketplace
2025-06-26 16:33:44.127 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] No handler found for actionVerb 'ACCOMPLISH'. Invoking ACCOMPLISH/Brain for reasoning.
2025-06-26 16:33:44.139 | [AuthenticatedAxios] Request 6cj2ua5a8ks: Failed after 11ms: {
2025-06-26 16:33:44.139 |   status: 404,
2025-06-26 16:33:44.139 |   statusText: 'Not Found',
2025-06-26 16:33:44.139 |   data: { error: 'Data not found' },
2025-06-26 16:33:44.139 |   url: 'http://librarian:5040/loadData/ACCOMPLISH'
2025-06-26 16:33:44.139 | }
2025-06-26 16:33:44.139 | StructuredError Generated [CapabilitiesManager.checkCachedPlan]: Could not check cached plan for verb 'ACCOMPLISH'. Request failed with status code 404 (Code: CM015_INTERNAL_ERROR_CM, Trace: 41ada1b3-6a1e-43e9-9ce2-ff06bf98fa7f, ID: b171b78a-291c-4a21-8d77-1802adfe3644)
2025-06-26 16:33:44.140 | LocalRepo: Loading from  /usr/src/app/services//capabilitiesmanager/src/plugins
2025-06-26 16:33:44.141 | LocalRepo: Loading from  [
2025-06-26 16:33:44.141 |   'ACCOMPLISH',
2025-06-26 16:33:44.141 |   'BasePlugin.ts',
2025-06-26 16:33:44.141 |   'FILE_OPS_PYTHON',
2025-06-26 16:33:44.141 |   'GET_USER_INPUT',
2025-06-26 16:33:44.141 |   'SCRAPE',
2025-06-26 16:33:44.141 |   'SEARCH_PYTHON',
2025-06-26 16:33:44.141 |   'TEXT_ANALYSIS',
2025-06-26 16:33:44.141 |   'WEATHER'
2025-06-26 16:33:44.141 | ]
2025-06-26 16:33:44.141 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/ACCOMPLISH/manifest.json
2025-06-26 16:33:44.143 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/BasePlugin.ts/manifest.json
2025-06-26 16:33:44.144 | Error loading from  BasePlugin.ts ENOTDIR: not a directory, open '/usr/src/app/services/capabilitiesmanager/src/plugins/BasePlugin.ts/manifest.json'
2025-06-26 16:33:44.144 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/FILE_OPS_PYTHON/manifest.json
2025-06-26 16:33:44.146 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/GET_USER_INPUT/manifest.json
2025-06-26 16:33:44.148 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/SCRAPE/manifest.json
2025-06-26 16:33:44.150 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/SEARCH_PYTHON/manifest.json
2025-06-26 16:33:44.152 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/TEXT_ANALYSIS/manifest.json
2025-06-26 16:33:44.154 | Error loading from  TEXT_ANALYSIS Cannot read properties of undefined (reading 'dependencies')
2025-06-26 16:33:44.154 | LocalRepo: Loading from  /usr/src/app/services/capabilitiesmanager/src/plugins/WEATHER/manifest.json
2025-06-26 16:33:44.156 | Error loading from  WEATHER Cannot read properties of undefined (reading 'dependencies')
2025-06-26 16:33:44.156 | LocalRepo: Locators count 5
2025-06-26 16:33:44.157 | LocalRepository.fetch: Manifest not found at direct path /usr/src/app/services/capabilitiesmanager/src/plugins/plugin-ACCOMPLISH/manifest.json. Falling back to iterating directories for ID 'plugin-ACCOMPLISH'.
2025-06-26 16:33:44.160 | LocalRepository.fetch: Manifest not found at direct path /usr/src/app/services/capabilitiesmanager/src/plugins/plugin-FILE_OPS_PYTHON/manifest.json. Falling back to iterating directories for ID 'plugin-FILE_OPS_PYTHON'.
2025-06-26 16:33:44.163 | LocalRepository.fetch: Manifest not found at direct path /usr/src/app/services/capabilitiesmanager/src/plugins/plugin-GET_USER_INPUT/manifest.json. Falling back to iterating directories for ID 'plugin-GET_USER_INPUT'.
2025-06-26 16:33:44.169 | LocalRepository.fetch: Manifest not found at direct path /usr/src/app/services/capabilitiesmanager/src/plugins/plugin-SCRAPE/manifest.json. Falling back to iterating directories for ID 'plugin-SCRAPE'.
2025-06-26 16:33:44.174 | LocalRepository.fetch: Manifest not found at direct path /usr/src/app/services/capabilitiesmanager/src/plugins/plugin-SEARCH_PYTHON/manifest.json. Falling back to iterating directories for ID 'plugin-SEARCH_PYTHON'.
2025-06-26 16:33:45.052 | Error: GitHub API Error for GET https://api.github.com/repos/cpravetz/s7plugins/contents/plugins. Status: 401. Details: {"message":"Bad credentials","documentation_url":"https://docs.github.com/rest","status":"401"}
2025-06-26 16:33:45.052 |     at GitHubRepository.makeGitHubRequest (/usr/src/app/marketplace/dist/repositories/GitHubRepository.js:152:31)
2025-06-26 16:33:45.052 |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-06-26 16:33:45.052 |     at async GitHubRepository.list (/usr/src/app/marketplace/dist/repositories/GitHubRepository.js:359:30)
2025-06-26 16:33:45.052 |     at async PluginMarketplace.getAvailablePluginsStr (/usr/src/app/marketplace/dist/PluginMarketplace.js:289:34)
2025-06-26 16:33:45.052 |     at async PluginRegistry.getAvailablePluginsStr (/usr/src/app/services/capabilitiesmanager/dist/utils/pluginRegistry.js:302:20)
2025-06-26 16:33:45.052 |     at async CapabilitiesManager.executeAccomplishPlugin (/usr/src/app/services/capabilitiesmanager/dist/CapabilitiesManager.js:830:41)
2025-06-26 16:33:45.052 |     at async CapabilitiesManager.handleUnknownVerb (/usr/src/app/services/capabilitiesmanager/dist/CapabilitiesManager.js:787:43)
2025-06-26 16:33:45.052 |     at async CapabilitiesManager.executeActionVerb (/usr/src/app/services/capabilitiesmanager/dist/CapabilitiesManager.js:291:39)
2025-06-26 16:33:45.052 | GitHubRepository: Error listing plugin ID dirs from plugins: Request failed with status code 401
2025-06-26 16:33:45.056 | Using inline plugin path for plugin-ACCOMPLISH (ACCOMPLISH): /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH
2025-06-26 16:33:45.056 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.executePlugin: Executing plugin plugin-ACCOMPLISH v1.0.0 (ACCOMPLISH) at /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH
2025-06-26 16:33:45.107 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.executePythonPlugin: Python execution - Main file path: /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/main.py, Root path: /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH
2025-06-26 16:33:45.110 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.ensurePythonDependencies: Creating virtual environment at /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/venv.
2025-06-26 16:33:45.110 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.ensurePythonDependencies: Install command: python3 -m venv "/usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/venv" && "/usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/venv/bin/pip" install --upgrade pip && "/usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/venv/bin/pip" install -r "/usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/requirements.txt"
2025-06-26 16:34:03.314 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.ensurePythonDependencies: Python dependency installation stdout: Requirement already satisfied: pip in ./venv/lib/python3.12/site-packages (25.0.1)
2025-06-26 16:34:03.314 | Collecting pip
2025-06-26 16:34:03.315 |   Downloading pip-25.1.1-py3-none-any.whl.metadata (3.6 kB)
2025-06-26 16:34:03.315 | Downloading pip-25.1.1-py3-none-any.whl (1.8 MB)
2025-06-26 16:34:03.315 |    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.8/1.8 MB 7.2 MB/s eta 0:00:00
2025-06-26 16:34:03.315 | Installing collected packages: pip
2025-06-26 16:34:03.315 |   Attempting uninstall: pip
2025-06-26 16:34:03.315 |     Found existing installation: pip 25.0.1
2025-06-26 16:34:03.315 |     Uninstalling pip-25.0.1:
2025-06-26 16:34:03.315 |       Successfully uninstalled pip-25.0.1
2025-06-26 16:34:03.315 | Successfully installed pip-25.1.1
2025-06-26 16:34:03.315 | Collecting requests>=2.28.0 (from -r /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/requirements.txt (line 1))
2025-06-26 16:34:03.315 |   Using cached requests-2.32.4-py3-none-any.whl.metadata (4.9 kB)
2025-06-26 16:34:03.315 | Collecting charset_normalizer<4,>=2 (from requests>=2.28.0->-r /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/requirements.txt (line 1))
2025-06-26 16:34:03.315 |   Using cached charset_normalizer-3.4.2-cp312-cp312-musllinux_1_2_x86_64.whl.metadata (35 kB)
2025-06-26 16:34:03.315 | Collecting idna<4,>=2.5 (from requests>=2.28.0->-r /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/requirements.txt (line 1))
2025-06-26 16:34:03.315 |   Using cached idna-3.10-py3-none-any.whl.metadata (10 kB)
2025-06-26 16:34:03.315 | Collecting urllib3<3,>=1.21.1 (from requests>=2.28.0->-r /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/requirements.txt (line 1))
2025-06-26 16:34:03.315 |   Using cached urllib3-2.5.0-py3-none-any.whl.metadata (6.5 kB)
2025-06-26 16:34:03.315 | Collecting certifi>=2017.4.17 (from requests>=2.28.0->-r /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/requirements.txt (line 1))
2025-06-26 16:34:03.315 |   Using cached certifi-2025.6.15-py3-none-any.whl.metadata (2.4 kB)
2025-06-26 16:34:03.315 | Using cached requests-2.32.4-py3-none-any.whl (64 kB)
2025-06-26 16:34:03.315 | Using cached charset_normalizer-3.4.2-cp312-cp312-musllinux_1_2_x86_64.whl (149 kB)
2025-06-26 16:34:03.315 | Using cached idna-3.10-py3-none-any.whl (70 kB)
2025-06-26 16:34:03.315 | Using cached urllib3-2.5.0-py3-none-any.whl (129 kB)
2025-06-26 16:34:03.315 | Using cached certifi-2025.6.15-py3-none-any.whl (157 kB)
2025-06-26 16:34:03.315 | Installing collected packages: urllib3, idna, charset_normalizer, certifi, requests
2025-06-26 16:34:03.315 | 
2025-06-26 16:34:03.315 | Successfully installed certifi-2025.6.15 charset_normalizer-3.4.2 idna-3.10 requests-2.32.4 urllib3-2.5.0
2025-06-26 16:34:03.315 | 
2025-06-26 16:34:03.315 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.ensurePythonDependencies: Python dependencies processed successfully for /usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH. Marker file updated.
2025-06-26 16:34:03.315 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.executePythonPlugin: Executing Python command: echo "" | base64 -d | "/usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/venv/bin/python" "/usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH/main.py" "/usr/src/app/services/capabilitiesmanager/dist/plugins/ACCOMPLISH"
2025-06-26 16:34:03.315 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.executePythonPlugin: Piping inputsJsonString to Python plugin: [["goal",{"inputName":"goal","inputValue":"Handle the action verb \"ACCOMPLISH\" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.","args":{}}],["verbToAvoid",{"inputName":"verbToAvoid","inputValue":"ACCOMPLISH","args":{}}],["available_plugins",{"inputName":"available_plugins","inputValue":"- ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it\n    Required Inputs:\n      - goal (string) [required]: The goal to be accomplished or planned for\n- FILE_OPERATION: Provides services for file operations: read, write, append\n    Required Inputs:\n      - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)\n      - operation (string) [required]: Operation to perform: 'read', 'write', or 'append'\n      - content (string): For write and append operations, the content to write or append\n- GET_USER_INPUT: Requests input from the user\n    Required Inputs:\n      - question (string) [required]: The question to ask the user\n      - choices (array): Optional array of choices for multiple choice questions\n      - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)\n- SCRAPE: Scrapes content from a given URL\n    Required Inputs:\n      - url (string) [required]: The URL to scrape content from\n      - selector (string): CSS selector to target specific elements (optional)\n      - attribute (string): Attribute to extract from the selected elements (optional)\n      - limit (number): Maximum number of results to return (optional)\n- SEARCH: Searches DuckDuckGo for a given term and returns a list of links\n    Required Inputs:\n      - searchTerm (string) [required]: The term to search for on DuckDuckGo\n- DELEGATE: Create sub-agents with goals of their own.\n- ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)\n- THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization\n- GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)\n- FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)\n- SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)\n- SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)\n- GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)\n- DECIDE - Conditional branching based on a condition (required inputs: condition: {\"inputName\": \"value\"}, trueSteps[], falseSteps[])\n- WHILE - Repeat steps while a condition is true (required inputs: condition: {\"inputName\": \"value\"}, steps[])\n- UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {\"inputName\": \"value\"}, steps[])\n- SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])\n- TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])\n- REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])","args":{}}],["__auth_token",{"inputName":"__auth_token","inputValue":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw","args":{"token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw"}}],["__brain_auth_token",{"inputName":"__brain_auth_token","inputValue":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ","args":{"token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ"}}],["token",{"inputName":"token","inputValue":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ","args":{"token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ"}}]]
2025-06-26 16:34:04.521 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.executePythonPlugin: Raw stdout from Python plugin ACCOMPLISH v1.0.0:
2025-06-26 16:34:04.521 | [{"success": false, "name": "error", "resultType": "ERROR", "resultDescription": "Plugin execution error", "result": null, "error": "Object of type property is not JSON serializable"}]
2025-06-26 16:34:04.521 | 
2025-06-26 16:34:04.521 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.executePythonPlugin: Raw stderr from Python plugin ACCOMPLISH v1.0.0:
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,837 - INFO - Raw input string: [["goal",{"inputName":"goal","inputValue":"Handle the action verb \"ACCOMPLISH\" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.","args":{}}],["verbToAvoid",{"inputName":"verbToAvoid","inputValue":"ACCOMPLISH","args":{}}],["available_plugins",{"inputName":"available_plugins","inputValue":"- ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it\n    Required Inputs:\n      - goal (string) [required]: The goal to be accomplished or planned for\n- FILE_OPERATION: Provides services for file operations: read, write, append\n    Required Inputs:\n      - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)\n      - operation (string) [required]: Operation to perform: 'read', 'write', or 'append'\n      - content (string): For write and append operations, the content to write or append\n- GET_USER_INPUT: Requests input from the user\n    Required Inputs:\n      - question (string) [required]: The question to ask the user\n      - choices (array): Optional array of choices for multiple choice questions\n      - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)\n- SCRAPE: Scrapes content from a given URL\n    Required Inputs:\n      - url (string) [required]: The URL to scrape content from\n      - selector (string): CSS selector to target specific elements (optional)\n      - attribute (string): Attribute to extract from the selected elements (optional)\n      - limit (number): Maximum number of results to return (optional)\n- SEARCH: Searches DuckDuckGo for a given term and returns a list of links\n    Required Inputs:\n      - searchTerm (string) [required]: The term to search for on DuckDuckGo\n- DELEGATE: Create sub-agents with goals of their own.\n- ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)\n- THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization\n- GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)\n- FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)\n- SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)\n- SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)\n- GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)\n- DECIDE - Conditional branching based on a condition (required inputs: condition: {\"inputName\": \"value\"}, trueSteps[], falseSteps[])\n- WHILE - Repeat steps while a condition is true (required inputs: condition: {\"inputName\": \"value\"}, steps[])\n- UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {\"inputName\": \"value\"}, steps[])\n- SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])\n- TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])\n- REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])","args":{}}],["__auth_token",{"inputName":"__auth_token","inputValue":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw","args":{"token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw"}}],["__brain_auth_token",{"inputName":"__brain_auth_token","inputValue":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ","args":{"token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ"}}],["token",{"inputName":"token","inputValue":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ","args":{"token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ"}}]]
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,838 - INFO - Parsed inputs list: [['goal', {'inputName': 'goal', 'inputValue': 'Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.', 'args': {}}], ['verbToAvoid', {'inputName': 'verbToAvoid', 'inputValue': 'ACCOMPLISH', 'args': {}}], ['available_plugins', {'inputName': 'available_plugins', 'inputValue': '- ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it\n    Required Inputs:\n      - goal (string) [required]: The goal to be accomplished or planned for\n- FILE_OPERATION: Provides services for file operations: read, write, append\n    Required Inputs:\n      - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)\n      - operation (string) [required]: Operation to perform: \'read\', \'write\', or \'append\'\n      - content (string): For write and append operations, the content to write or append\n- GET_USER_INPUT: Requests input from the user\n    Required Inputs:\n      - question (string) [required]: The question to ask the user\n      - choices (array): Optional array of choices for multiple choice questions\n      - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)\n- SCRAPE: Scrapes content from a given URL\n    Required Inputs:\n      - url (string) [required]: The URL to scrape content from\n      - selector (string): CSS selector to target specific elements (optional)\n      - attribute (string): Attribute to extract from the selected elements (optional)\n      - limit (number): Maximum number of results to return (optional)\n- SEARCH: Searches DuckDuckGo for a given term and returns a list of links\n    Required Inputs:\n      - searchTerm (string) [required]: The term to search for on DuckDuckGo\n- DELEGATE: Create sub-agents with goals of their own.\n- ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)\n- THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization\n- GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)\n- FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)\n- SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)\n- SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)\n- GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)\n- DECIDE - Conditional branching based on a condition (required inputs: condition: {"inputName": "value"}, trueSteps[], falseSteps[])\n- WHILE - Repeat steps while a condition is true (required inputs: condition: {"inputName": "value"}, steps[])\n- UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {"inputName": "value"}, steps[])\n- SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])\n- TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])\n- REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])', 'args': {}}], ['__auth_token', {'inputName': '__auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw'}}], ['__brain_auth_token', {'inputName': '__brain_auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}], ['token', {'inputName': 'token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}]]
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,838 - INFO - Inputs map: {'goal': {'inputName': 'goal', 'inputValue': 'Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.', 'args': {}}, 'verbToAvoid': {'inputName': 'verbToAvoid', 'inputValue': 'ACCOMPLISH', 'args': {}}, 'available_plugins': {'inputName': 'available_plugins', 'inputValue': '- ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it\n    Required Inputs:\n      - goal (string) [required]: The goal to be accomplished or planned for\n- FILE_OPERATION: Provides services for file operations: read, write, append\n    Required Inputs:\n      - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)\n      - operation (string) [required]: Operation to perform: \'read\', \'write\', or \'append\'\n      - content (string): For write and append operations, the content to write or append\n- GET_USER_INPUT: Requests input from the user\n    Required Inputs:\n      - question (string) [required]: The question to ask the user\n      - choices (array): Optional array of choices for multiple choice questions\n      - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)\n- SCRAPE: Scrapes content from a given URL\n    Required Inputs:\n      - url (string) [required]: The URL to scrape content from\n      - selector (string): CSS selector to target specific elements (optional)\n      - attribute (string): Attribute to extract from the selected elements (optional)\n      - limit (number): Maximum number of results to return (optional)\n- SEARCH: Searches DuckDuckGo for a given term and returns a list of links\n    Required Inputs:\n      - searchTerm (string) [required]: The term to search for on DuckDuckGo\n- DELEGATE: Create sub-agents with goals of their own.\n- ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)\n- THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization\n- GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)\n- FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)\n- SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)\n- SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)\n- GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)\n- DECIDE - Conditional branching based on a condition (required inputs: condition: {"inputName": "value"}, trueSteps[], falseSteps[])\n- WHILE - Repeat steps while a condition is true (required inputs: condition: {"inputName": "value"}, steps[])\n- UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {"inputName": "value"}, steps[])\n- SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])\n- TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])\n- REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])', 'args': {}}, '__auth_token': {'inputName': '__auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw'}}, '__brain_auth_token': {'inputName': '__brain_auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}, 'token': {'inputName': 'token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}}
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,840 - INFO - Goal found in inputs: {'inputName': 'goal', 'inputValue': 'Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.', 'args': {}}
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,840 - INFO - Goal inputValue: Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,840 - INFO - Execute method called with inputs_map: {'goal': {'inputName': 'goal', 'inputValue': 'Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.', 'args': {}}, 'verbToAvoid': {'inputName': 'verbToAvoid', 'inputValue': 'ACCOMPLISH', 'args': {}}, 'available_plugins': {'inputName': 'available_plugins', 'inputValue': '- ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it\n    Required Inputs:\n      - goal (string) [required]: The goal to be accomplished or planned for\n- FILE_OPERATION: Provides services for file operations: read, write, append\n    Required Inputs:\n      - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)\n      - operation (string) [required]: Operation to perform: \'read\', \'write\', or \'append\'\n      - content (string): For write and append operations, the content to write or append\n- GET_USER_INPUT: Requests input from the user\n    Required Inputs:\n      - question (string) [required]: The question to ask the user\n      - choices (array): Optional array of choices for multiple choice questions\n      - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)\n- SCRAPE: Scrapes content from a given URL\n    Required Inputs:\n      - url (string) [required]: The URL to scrape content from\n      - selector (string): CSS selector to target specific elements (optional)\n      - attribute (string): Attribute to extract from the selected elements (optional)\n      - limit (number): Maximum number of results to return (optional)\n- SEARCH: Searches DuckDuckGo for a given term and returns a list of links\n    Required Inputs:\n      - searchTerm (string) [required]: The term to search for on DuckDuckGo\n- DELEGATE: Create sub-agents with goals of their own.\n- ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)\n- THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization\n- GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)\n- FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)\n- SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)\n- SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)\n- GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)\n- DECIDE - Conditional branching based on a condition (required inputs: condition: {"inputName": "value"}, trueSteps[], falseSteps[])\n- WHILE - Repeat steps while a condition is true (required inputs: condition: {"inputName": "value"}, steps[])\n- UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {"inputName": "value"}, steps[])\n- SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])\n- TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])\n- REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])', 'args': {}}, '__auth_token': {'inputName': '__auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw'}}, '__brain_auth_token': {'inputName': '__brain_auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}, 'token': {'inputName': 'token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}}
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,841 - INFO - Processing input key: goal, value_obj: {'inputName': 'goal', 'inputValue': 'Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.', 'args': {}}
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,841 - INFO - Found goal: Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,841 - INFO - Processing input key: verbToAvoid, value_obj: {'inputName': 'verbToAvoid', 'inputValue': 'ACCOMPLISH', 'args': {}}
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,841 - INFO - Processing input key: available_plugins, value_obj: {'inputName': 'available_plugins', 'inputValue': '- ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it\n    Required Inputs:\n      - goal (string) [required]: The goal to be accomplished or planned for\n- FILE_OPERATION: Provides services for file operations: read, write, append\n    Required Inputs:\n      - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)\n      - operation (string) [required]: Operation to perform: \'read\', \'write\', or \'append\'\n      - content (string): For write and append operations, the content to write or append\n- GET_USER_INPUT: Requests input from the user\n    Required Inputs:\n      - question (string) [required]: The question to ask the user\n      - choices (array): Optional array of choices for multiple choice questions\n      - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)\n- SCRAPE: Scrapes content from a given URL\n    Required Inputs:\n      - url (string) [required]: The URL to scrape content from\n      - selector (string): CSS selector to target specific elements (optional)\n      - attribute (string): Attribute to extract from the selected elements (optional)\n      - limit (number): Maximum number of results to return (optional)\n- SEARCH: Searches DuckDuckGo for a given term and returns a list of links\n    Required Inputs:\n      - searchTerm (string) [required]: The term to search for on DuckDuckGo\n- DELEGATE: Create sub-agents with goals of their own.\n- ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)\n- THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization\n- GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)\n- FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)\n- SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)\n- SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)\n- GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)\n- DECIDE - Conditional branching based on a condition (required inputs: condition: {"inputName": "value"}, trueSteps[], falseSteps[])\n- WHILE - Repeat steps while a condition is true (required inputs: condition: {"inputName": "value"}, steps[])\n- UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {"inputName": "value"}, steps[])\n- SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])\n- TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])\n- REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])', 'args': {}}
2025-06-26 16:34:04.521 | 2025-06-26 20:34:03,841 - INFO - Found available_plugins: - ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it
2025-06-26 16:34:04.521 |     Required Inputs:
2025-06-26 16:34:04.521 |       - goal (string) [required]: The goal to be accomplished or planned for
2025-06-26 16:34:04.521 | - FILE_OPERATION: Provides services for file operations: read, write, append
2025-06-26 16:34:04.521 |     Required Inputs:
2025-06-26 16:34:04.521 |       - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)
2025-06-26 16:34:04.521 |       - operation (string) [required]: Operation to perform: 'read', 'write', or 'append'
2025-06-26 16:34:04.521 |       - content (string): For write and append operations, the content to write or append
2025-06-26 16:34:04.521 | - GET_USER_INPUT: Requests input from the user
2025-06-26 16:34:04.521 |     Required Inputs:
2025-06-26 16:34:04.521 |       - question (string) [required]: The question to ask the user
2025-06-26 16:34:04.521 |       - choices (array): Optional array of choices for multiple choice questions
2025-06-26 16:34:04.521 |       - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)
2025-06-26 16:34:04.521 | - SCRAPE: Scrapes content from a given URL
2025-06-26 16:34:04.521 |     Required Inputs:
2025-06-26 16:34:04.521 |       - url (string) [required]: The URL to scrape content from
2025-06-26 16:34:04.521 |       - selector (string): CSS selector to target specific elements (optional)
2025-06-26 16:34:04.521 |       - attribute (string): Attribute to extract from the selected elements (optional)
2025-06-26 16:34:04.521 |       - limit (number): Maximum number of results to return (optional)
2025-06-26 16:34:04.521 | - SEARCH: Searches DuckDuckGo for a given term and returns a list of links
2025-06-26 16:34:04.521 |     Required Inputs:
2025-06-26 16:34:04.521 |       - searchTerm (string) [required]: The term to search for on DuckDuckGo
2025-06-26 16:34:04.521 | - DELEGATE: Create sub-agents with goals of their own.
2025-06-26 16:34:04.521 | - ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)
2025-06-26 16:34:04.521 | - THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization
2025-06-26 16:34:04.521 | - GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)
2025-06-26 16:34:04.521 | - FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)
2025-06-26 16:34:04.521 | - SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)
2025-06-26 16:34:04.521 | - SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)
2025-06-26 16:34:04.521 | - GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)
2025-06-26 16:34:04.521 | - DECIDE - Conditional branching based on a condition (required inputs: condition: {"inputName": "value"}, trueSteps[], falseSteps[])
2025-06-26 16:34:04.521 | - WHILE - Repeat steps while a condition is true (required inputs: condition: {"inputName": "value"}, steps[])
2025-06-26 16:34:04.521 | - UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {"inputName": "value"}, steps[])
2025-06-26 16:34:04.521 | - SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])
2025-06-26 16:34:04.521 | - TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])
2025-06-26 16:34:04.521 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.validatePythonOutput: Validating Python output for ACCOMPLISH v1.0.0. Received stdout:
2025-06-26 16:34:04.521 | [{"success": false, "name": "error", "resultType": "ERROR", "resultDescription": "Plugin execution error", "result": null, "error": "Object of type property is not JSON serializable"}]
2025-06-26 16:34:04.521 | 
2025-06-26 16:34:04.522 | - REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])
2025-06-26 16:34:04.522 | 2025-06-26 20:34:03,842 - INFO - Processing input key: __auth_token, value_obj: {'inputName': '__auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJFcnJvckhhbmRsZXIiLCJhdWQiOiJzdGFnZTctc2VydmljZXMiLCJleHAiOjE3NTA5NzM2MTMsImlhdCI6MTc1MDk3MDAxMywianRpIjoiMWFiN29qNWRkcmF5MjhrcWp1Mm53ayIsImNvbXBvbmVudFR5cGUiOiJFcnJvckhhbmRsZXIiLCJyb2xlcyI6WyJlcnJvcjphc3Nlc3MiXSwicGVybWlzc2lvbnMiOlsiZXJyb3I6YXNzZXNzIl0sImNsaWVudElkIjoiRXJyb3JIYW5kbGVyIn0.JZT0l5ueHfkvsV7jp_O8B1Io1ztxZaYLXSbrQQZ3bvGnMI3UzIhbY4RWt1HX2iDxPDOoDJZv-N49m-CKa4x-fkf46cpC6MMFjt0eCMEP7UF1j42gygXJSdb7-1lo17aaHNAtcT7RiZ-KYPXj2qFFS8uOcJnBDHF6wkraMJq3MXwp__kM2_ZSkLWVRTEHxjFLQ9TfSLFionXLCPDd3OSzS0nWB4e1v123QYH0_5_qElNExwF_JVBZBNS63XkUml__nfIyIXGlVtxE1gJqQp5lbbnh3O8Ec7ajaSgQ4iAw3vWTJYcre3n1ffOVKiw1nLf1F7X9X9rhOm5PHxvM6eWgZw'}}
2025-06-26 16:34:04.522 | 2025-06-26 20:34:03,842 - INFO - Processing input key: __brain_auth_token, value_obj: {'inputName': '__brain_auth_token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}
2025-06-26 16:34:04.522 | 2025-06-26 20:34:03,842 - INFO - Found brain token from key __brain_auth_token: eyJhbGciOiJSUzI1NiIs...
2025-06-26 16:34:04.522 | 2025-06-26 20:34:03,842 - INFO - Processing input key: token, value_obj: {'inputName': 'token', 'inputValue': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ', 'args': {'token': 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cml0eU1hbmFnZXIiLCJzdWIiOiJCcmFpbiIsImF1ZCI6InN0YWdlNy1zZXJ2aWNlcyIsImV4cCI6MTc1MDk3MzYyNSwiaWF0IjoxNzUwOTcwMDI1LCJqdGkiOiJlbmEyOTVzYmQyYTA3MjNmc2h2eHpnIiwiY29tcG9uZW50VHlwZSI6IkJyYWluIiwicm9sZXMiOlsibGxtOmludm9rZSJdLCJwZXJtaXNzaW9ucyI6WyJsbG06aW52b2tlIl0sImNsaWVudElkIjoiQnJhaW4ifQ.gqlm_oQsjj-6Ue9QWOffPGo51k3m6sWU28j5i-8lq5_EkeWdMVl5b81L1qnHB6RaZBo_erDXR-0m244Z4ytOIKtOoPLrTNYPwDYuulVWwpWGeRQXJ8CbsGbsxvY6zqdKPB2WTo9YEUY2xKiD2inh_IgiqTSDT6H-PwgPfLwhyY6wmSFMsNX1mx8jLJ5lOsaL7Rw67Uq0OWebmidekNkKwKGX95_1FfZmCHLYksNO2kwGhL3xnC16Kms7K-0WlX0OHDYOx2AJlDxuMEJAlFgT8GlTbEDqMiW8cCu3IAjt66Lm4YWAOWfl-TZzK9J0qhYE1FVyvv1D0oIWw2Dc0hPzvQ'}}
2025-06-26 16:34:04.522 | 2025-06-26 20:34:03,842 - INFO - Found brain token from key token: eyJhbGciOiJSUzI1NiIs...
2025-06-26 16:34:04.522 | 2025-06-26 20:34:03,842 - INFO - Final goal: Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.
2025-06-26 16:34:04.522 | 2025-06-26 20:34:03,842 - INFO - Final available_plugins_str: - ACCOMPLISH: Accomplishes a given goal or creates a plan to achieve it
2025-06-26 16:34:04.522 |     Required Inputs:
2025-06-26 16:34:04.522 |       - goal (string) [required]: The goal to be accomplished or planned for
2025-06-26 16:34:04.522 | - FILE_OPERATION: Provides services for file operations: read, write, append
2025-06-26 16:34:04.522 |     Required Inputs:
2025-06-26 16:34:04.522 |       - path (string) [required]: The path for the filename to read, write, or append content (relative paths only for security)
2025-06-26 16:34:04.522 |       - operation (string) [required]: Operation to perform: 'read', 'write', or 'append'
2025-06-26 16:34:04.522 |       - content (string): For write and append operations, the content to write or append
2025-06-26 16:34:04.522 | - GET_USER_INPUT: Requests input from the user
2025-06-26 16:34:04.522 |     Required Inputs:
2025-06-26 16:34:04.522 |       - question (string) [required]: The question to ask the user
2025-06-26 16:34:04.522 |       - choices (array): Optional array of choices for multiple choice questions
2025-06-26 16:34:04.522 |       - answerType (string): Type of answer expected (text, number, boolean, or multipleChoice)
2025-06-26 16:34:04.522 | - SCRAPE: Scrapes content from a given URL
2025-06-26 16:34:04.522 |     Required Inputs:
2025-06-26 16:34:04.522 |       - url (string) [required]: The URL to scrape content from
2025-06-26 16:34:04.522 |       - selector (string): CSS selector to target specific elements (optional)
2025-06-26 16:34:04.522 |       - attribute (string): Attribute to extract from the selected elements (optional)
2025-06-26 16:34:04.522 |       - limit (number): Maximum number of results to return (optional)
2025-06-26 16:34:04.522 | - SEARCH: Searches DuckDuckGo for a given term and returns a list of links
2025-06-26 16:34:04.522 |     Required Inputs:
2025-06-26 16:34:04.522 |       - searchTerm (string) [required]: The term to search for on DuckDuckGo
2025-06-26 16:34:04.522 | - DELEGATE: Create sub-agents with goals of their own.
2025-06-26 16:34:04.522 | - ACCOMPLISH - takes a specific goal and either achieves it or returns a plan to achieve it. (required input: goal)
2025-06-26 16:34:04.522 | - THINK - sends prompts to the chat function of the LLMs attached to the system in order to generate content from a conversation.(required input: prompt) (optional inputs: optimization (cost|accuracy|creativity|speed|continuity), ConversationType) accuracy is the default optimization
2025-06-26 16:34:04.522 | - GENERATE - uses LLM services to generate content from a prompt or other content. Services include image creation, audio transscription, image editing, etc. (required input: ConversationType) (optional inputs: modelName, optimization, prompt, file, audio, video, image...)
2025-06-26 16:34:04.522 | - FILE_OPS - provides services for file operations read, write, append (required inputs: path, operation, content)
2025-06-26 16:34:04.522 | - SEARCH - searches DuckDuckGo for a given term and returns a list of links (required input: searchTerm)
2025-06-26 16:34:04.522 | - SCRAPE - scrapes content from a given URL (required inputs: url, selector, attribute, limit)
2025-06-26 16:34:04.522 | - GET_USER_INPUT - requests input from the user (required inputs: question, answerType) (optional input: choices)
2025-06-26 16:34:04.522 | - DECIDE - Conditional branching based on a condition (required inputs: condition: {"inputName": "value"}, trueSteps[], falseSteps[])
2025-06-26 16:34:04.522 | - WHILE - Repeat steps while a condition is true (required inputs: condition: {"inputName": "value"}, steps[])
2025-06-26 16:34:04.522 | - UNTIL - Repeat steps until a condition becomes true (required inputs: condition: {"inputName": "value"}, steps[])
2025-06-26 16:34:04.522 | - SEQUENCE - Execute steps in strict sequential order / no concurrency (required inputs: steps[])
2025-06-26 16:34:04.522 | [CapabilitiesManager-constructor-aa809a43-2c2fe29a] CapabilitiesManager.validatePythonOutput: Python plugin output parsed and validated successfully for ACCOMPLISH v1.0.0
2025-06-26 16:34:04.522 | [handleUnknownVerb] plugin result: [
2025-06-26 16:34:04.522 |   {
2025-06-26 16:34:04.522 |     success: false,
2025-06-26 16:34:04.522 |     name: 'error',
2025-06-26 16:34:04.522 |     resultType: 'ERROR',
2025-06-26 16:34:04.522 |     resultDescription: 'Plugin execution error',
2025-06-26 16:34:04.522 |     result: null,
2025-06-26 16:34:04.522 |     error: 'Object of type property is not JSON serializable'
2025-06-26 16:34:04.522 |   }
2025-06-26 16:34:04.522 | ]
2025-06-26 16:34:04.523 | - TIMEOUT - Set a timeout for a group of steps (required inputs: timeout, steps[])
2025-06-26 16:34:04.523 | - REPEAT - Repeat steps a specific number of times (required inputs: count, steps[])
2025-06-26 16:34:04.523 | 2025-06-26 20:34:03,842 - INFO - Final mission_context_str: No overall mission context provided.
2025-06-26 16:34:04.523 | 2025-06-26 20:34:03,843 - INFO - Brain token available: True
2025-06-26 16:34:04.523 | 2025-06-26 20:34:03,843 - INFO - Generated prompt for Brain: You are a planning assistant. Your ONLY task is to generate one of the following JSON outputs to achieve the following goal: 'Handle the action verb "ACCOMPLISH" in our plan with the following context:  Initial mission step with inputs [object Object] by defining a plan, generating an answer from the inputs, or recommending a new plugin for handling the actionVerb. Respond with a plan, a plugin request, or a literal result. Avoid using this action verb, ACCOMPLISH, in the plan.'.
2025-06-26 16:34:04.523 | 
2025-06-26 16:34:04.523 | You MUST respo...
2025-06-26 16:34:04.523 | 2025-06-26 20:34:03,843 - INFO - Querying Brain at brain:5070/chat with token: eyJhbGciOiJSUzI1NiIs...
2025-06-26 16:34:04.523 | 2025-06-26 20:34:04,463 - ERROR - Failed to parse Brain response as JSON: Expecting value: line 1 column 1 (char 0). Response: Error: An error occurred while fetching the blob
2025-06-26 16:34:04.523 | 2025-06-26 20:34:04,463 - ERROR - Main function error: Object of type property is not JSON serializable
2025-06-26 16:34:04.523 | 
2025-06-26 16:34:26.915 | [CapabilitiesManager-constructor-aa809a43-a8e20a74] 2025-06-26T20:34:26.914Z - CM - GET /health
2025-06-26 16:35:33.593 | [CapabilitiesManager-constructor-aa809a43-41bb1d84] 2025-06-26T20:35:33.592Z - CM - GET /health
2025-06-26 16:36:40.279 | [CapabilitiesManager-constructor-aa809a43-467f435a] 2025-06-26T20:36:40.278Z - CM - GET /health