# Use an official Node.js runtime as the base image
FROM node:20-alpine

# Install Python and pip
RUN apk add --no-cache python3 py3-pip

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./
COPY shared/package*.json ./shared/
COPY errorhandler/package*.json ./errorhandler/
COPY services/capabilitiesmanager/package*.json ./services/capabilitiesmanager/

# Install the application dependencies
RUN npm install --verbose

# Copy the application code to the working directory
COPY shared ./shared
COPY errorhandler ./errorhandler
COPY services/capabilitiesmanager ./services/capabilitiesmanager

# Ensure plugins directory exists and copy plugins
RUN mkdir -p ./services/capabilitiesmanager/src/plugins 
COPY services/capabilitiesmanager/src/plugins ./services/capabilitiesmanager/src/plugins

# Build the TypeScript code
RUN npm run build --workspace=shared
RUN npm run build --workspace=errorhandler
RUN npm run build --workspace=services/capabilitiesmanager

RUN find ./services/capabilitiesmanager/src/plugins -name "plugin.js" -exec cp {} ./services/capabilitiesmanager/dist/plugins \;

# Set the working directory to the service
WORKDIR /usr/src/app/services/capabilitiesmanager

# Expose the port the app runs on
EXPOSE 5060

# Define the command to run the application
CMD ["node", "dist/CapabilitiesManager.js"]