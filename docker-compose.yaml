
services:
  postoffice:
    build: 
      context: .
      dockerfile: services/postoffice/dockerfile
    depends_on:
      - securitymanager
    environment:
      NODE_ENV: production
      PORT: &postofficePort 5020
      POSTOFFICE_URL: &postofficeUrl postoffice:5020
      SECURITYMANAGER_URL: &securitymanagerUrl securitymanager:5010
      MISSIONCONTROL_URL: &missioncontrolUrl missioncontrol:5030
      POSTOFFICE_CLIENT_SECRET: &postofficeSecret postOfficeAuthSecret
      CLIENT_SECRET: *postofficeSecret
    ports:
      - "5020:5020"

  missioncontrol:
    build: 
      context: .
      dockerfile: services/missioncontrol/dockerfile
    depends_on:
      - postoffice
    environment:
      NODE_ENV: production
      PORT: &missioncontrolPort 5030
      MISSIONCONTROL_URL: *missioncontrolUrl
      SECURITYMANAGER_URL: *securitymanagerUrl
      POSTOFFICE_URL: *postofficeUrl
      TRAFFICMANAGER_URL: &trafficmanagerUrl trafficmanager:5080
      LIBRARIAN_URL: &librarianUrl librarian:5040
      BRAIN_URL: &brainUrl brain:5070
      ENGINEER_URL: &engineerUrl engineer:5050
      MISSIONCONTROL_CLIENT_SECRET: &missioncontrolSecret missionControlAuthSecret
      CLIENT_SECRET: *missioncontrolSecret

  trafficmanager:
    build: 
      context: .
      dockerfile: services/trafficmanager/dockerfile
    depends_on:
      - postoffice
      - agentset
    environment:
      NODE_ENV: production
      PORT: &trafficmanagerPort 5080
      TRAFFICMANAGER_URL: *trafficmanagerUrl
      POSTOFFICE_URL: *postofficeUrl
      LIBRARIAN_URL: *librarianUrl
      TRAFFICMANAGER_CLIENT_SECRET: &trafficmanagerSecret trafficManagerAuthSecret
      CLIENT_SECRET: *trafficmanagerSecret

  brain:
    build: 
      context: .
      dockerfile: services/brain/dockerfile
    depends_on:
      - postoffice
    environment:
      NODE_ENV: production
      PORT: &brainPort 5070
      BRAIN_URL: *brainUrl
      POSTOFFICE_URL: *postofficeUrl
      BRAIN_CLIENT_SECRET: &brainSecret brainAuthSecret
      CLIENT_SECRET: *brainSecret

  agentset:
    build:
      context: .
      dockerfile: services/agentset/dockerfile
    depends_on:
      - postoffice
      - librarian
    environment:
      NODE_ENV: production
      POSTOFFICE_URL: *postofficeUrl
      TRAFFICMANAGER_URL: &trafficmanagerUrl
      CAPABILITIESMANAGER_URL: &capabilitiesmanagerUrl capabilitiesmanager:5060
      AGENTSET_CLIENT_SECRET: &agentsetSecret agentSetAuthSecret
      CLIENT_SECRET: *agentsetSecret

  engineer:
    build:
      context: .
      dockerfile: services/engineer/dockerfile
    depends_on:
      - postoffice
      - brain
    environment:
      NODE_ENV: =production
      PORT: &engineerPort 5050
      ENGINEER_URL: *engineerUrl
      POSTOFFICE_URL: *postofficeUrl
      BRAIN_URL: *brainUrl
      LIBRARIAN_URL: *librarianUrl
      ENGINEER_CLIENT_SECRET: &engineerSecret engineerAuthSecret
      CLIENT_SECRET: *engineerSecret

  capabilitiesmanager:
    build: 
      context: .
      dockerfile: services/capabilitiesmanager/dockerfile
    depends_on:
      - postoffice
      - engineer
    environment:
      NODE_ENV: production
      PORT: &capabilitiesmanagerPort 5060
      CAPABILITIESMANAGER_URL: *capabilitiesmanagerUrl
      POSTOFFICE_URL: *postofficeUrl
      LIBRARIAN_URL: *librarianUrl
      BRAIN_URL: *brainUrl
      ENGINEER_URL: &engineerUrl
      CAPABILITIESMANAGER_CLIENT_SECRET: &capabilitiesmanagerSecret capabilitiesManagerAuthSecret
      CLIENT_SECRET: *capabilitiesmanagerSecret

  librarian:
    build: 
      context: .
      dockerfile: services/librarian/dockerfile
    depends_on:
      - postoffice
    environment:
      MONGO_URL: mongodb:mongo:27017
      REDIS_URL: redis:redis:6379
      NODE_ENV: production
      PORT: &librarianPort 5040
      LIBRARIAN_URL: *librarianUrl
      POSTOFFICE_URL: *postofficeUrl
      LIBRARIAN_CLIENT_SECRET: &librarianSecret librarianAuthSecret
      CLIENT_SECRET: *librarianSecret

  securitymanager:
    build:
      context: .
      dockerfile: services/security/dockerfile
    environment:
      NODE_ENV: production
      PORT:  &securitymanagerPort 5010
      SECURITYMANAGER_URL: *securitymanagerUrl
      POSTOFFICE_URL: *postofficeUrl
      JWT_SECRET: your-secret-key
      ADMIN_SECRET: adminSecret
      LIBRARIAN_URL: *librarianUrl
      SECURITYMANAGER_CLIENT_SECRET: &securitymanagerSecret securityManagerAuthSecret
      CLIENT_SECRET: *securitymanagerSecret
      AGENTSET_CLIENT_SECRET: *agentsetSecret
      AGENT_CLIENT_SECRET: *agentsetSecret
      BRAIN_CLIENT_SECRET: *brainSecret
      CAPABILITIESMANAGER_CLIENT_SECRET: *capabilitiesmanagerSecret
      ENGINEER_CLIENT_SECRET: *engineerSecret
      LIBRARIAN_CLIENT_SECRET: *librarianSecret
      MISSIONCONTROL_CLIENT_SECRET: *missioncontrolSecret
      TRAFFICMANAGER_CLIENT_SECRET: *trafficmanagerSecret

  frontend:
    build:
      context: .
      dockerfile: services/mcsreact/dockerfile
    ports:
      - "80:80"
    depends_on:
      - postoffice
    environment:
      - ENV REACT_APP_API_BASE_URL=http://localhost:5020
      - ENV REACT_APP_WS_URL=ws://localhost:5020
      

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongo_data:
  redis_data:

networks:
  default:
    name: mcs_network